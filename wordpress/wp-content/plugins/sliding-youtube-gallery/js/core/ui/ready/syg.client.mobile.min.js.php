<?php
// Turn off all error reporting
error_reporting(0);

// include zend loader
$root = realpath(dirname(dirname(dirname(dirname(dirname(dirname(dirname(dirname($_SERVER["SCRIPT_FILENAME"])))))))));

// include wordpress loader
if (file_exists($root.'/wp-load.php')) {
	// WP 2.6
	require_once($root.'/wp-load.php');
} else {
	// Before 2.6
	require_once($root.'/wp-config.php');
}

// define constants
if (!defined('SYG_PATH')) define('SYG_PATH', realpath(plugin_dir_path(__FILE__)));
if (!defined('SYG_URL')) define('SYG_URL', plugins_url() . SygConstant::WP_PLUGIN_PATH);

// include required wordpress object
require_once( SYG_PATH . '/engine/SygPlugin.php');
require_once( SYG_PATH . '/engine/SygUtil.php');
require_once( SYG_PATH . '/engine/SygConstant.php');

// get plugin instance
$syg = SygPlugin::getInstance();

// get gallery settings
$option = $syg->getGallerySettings($_GET['id']);

// extract options to vars
extract ($option);

// set the cache directory target path
$target_dir = WP_CONTENT_DIR . SygConstant::WP_CACHE_JS_REL_DIR. $id . DIRECTORY_SEPARATOR;

// instantiate logging if debugging mode is active
if (SygConstant::SYG_DEBUG_MODE) {
    require_once( SYG_PATH . '/engine/lib/Log/Logging.php');
    $log = new Logging();
    $log->lfile($target_dir.'minification.log');
    $log->lwrite('Target directory: '.$target_dir);
}

// create if not exist
if (!file_exists($target_dir)) {
	mkdir($target_dir); 
	chmod(realpath($target_dir), 0777);
    if (SygConstant::SYG_DEBUG_MODE) {
        $log->lwrite('Directory not exists, I will create path '.$target_dir);
    }
}

// check client directive
if (array_key_exists ('ui', $_GET)) $uiType = $_GET['ui'];
if (array_key_exists ('cache', $_GET)) $cache = $_GET['cache'];

// set the target filename
$name = 'client.' . $uiType . '.' . $cache . '-' . SygUtil::folder2Md5('./');

// write information to log
if (SygConstant::SYG_DEBUG_MODE) {
    $log->lwrite('FOLDER2MD5: '.SygUtil::folder2Md5('./'));
    $log->lwrite('FILENAME TO READ OR WRITE: '.$name);
}

// set http header
header('Content-type: text/javascript; charset=utf-8');
header('Expires: '.gmdate("D, d M Y H:i:s", time() + 3600*24*365).' GMT');

// read or write the file
if(file_exists($target_dir.$name)) {
    // write information to log
    if (SygConstant::SYG_DEBUG_MODE) {
        $log->lwrite('File exists, I will read: '.$target_dir.$name);
    }

	// read the file
	readfile($target_dir.$name);

    // print file to the browser
    if (SygConstant::SYG_DEBUG_MODE) {
        $log->lwrite('Read completed, now print file to browser >>>>>>');
        $log->lwrite('!------------------------------------------------!');
    }
} else {
    // write information to log
    if (SygConstant::SYG_DEBUG_MODE) {
        $log->lwrite('Getting syg.client.mobile.js.php content >>>>>>');
    }

	// generate files
	$url = SYG_URL . 'js/core/ui/ready/syg.client.mobile.js.php?id='.$id;

	// check parameters 
	if (!empty($cache)) $url .= '&cache='.$cache;
	if (!empty($uiType)) $url .= '&ui='.$uiType;

	// get file content
	$js = file_get_contents($url);
	
	if(isset($_REQUEST['minify'])) {
        // write information to log
        if (SygConstant::SYG_DEBUG_MODE) {
            $log->lwrite('Minification has been requested');
        }

		// require jsmin
		require_once (SYG_PATH . '/engine/lib/jsmin-php/jsmin.php');

		// minification
		$js = JSMin::minify($js);

		// clean the cache
		SygUtil::cleanJsCache($target_dir);

        // write information to log
        if (SygConstant::SYG_DEBUG_MODE) {
            $log->lwrite('Writing minification file: ' . $target_dir.$name );
        }

		// write string to file
		@file_put_contents($target_dir.$name,$js);

        // print file to the browser
        if (SygConstant::SYG_DEBUG_MODE) {
            $log->lwrite('Write complete, now exiting >>>>>>');
            $log->lwrite('!------------------------------------------------!');
        }

		// exit
		exit;
	} else {
        // script url
		$url = SYG_URL . "js/core/ui/ready/syg.client.mobile.min.js.php";

        // write information to log
        if (SygConstant::SYG_DEBUG_MODE) {
            $log->lwrite('File not exists, I will create reading syg.client.mobile.js.php through a minification request');
        }

        // define minification request
        $js .= "(function($){
				var request = jQuery.ajax({
					url: '".$url."',
					type: 'GET',
					data: {minify: 1, id: ".$id.", ui: '".$uiType."', cache: '".$cache."'},
					dataType: 'script'
				});
			})(jQuery);";

        // write information to log
        if (SygConstant::SYG_DEBUG_MODE) {
            $log->lwrite('Print file to browser >>>>>>');
            $log->lwrite('!------------------------------------------------!');
        }

        echo $js;
    }

    if (SygConstant::SYG_DEBUG_MODE) {
        $log->lclose();
    }
}
?>